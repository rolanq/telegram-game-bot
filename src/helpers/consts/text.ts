import { mixEvents } from "helpers/utils/random";
import { JobT } from "types";
import { DungeonT } from "types/dungeon";
import { Conditions, UserT } from "types/user";
import packageJson from '../../../package.json' assert { type: 'json' };

export const GREETING_IN_BOT = `
–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–µ
–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —á–∞—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–π /help
`;

export const GREETING_IN_CHAT = `
–ü—Ä–∏–≤–µ—Ç! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—É—à–∏—Å—Ç–∏–∫–∞ –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –≤ —á–∞—Ç–µ

–ò—Å–ø–æ–ª—å–∑—É–π /my –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –ø—É—à–∏—Å—Ç–∏–∫–µ
–ò—Å–ø–æ–ª—å–∑—É–π /help —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö
`;

export const HELP = `
–≠—Ç–æ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∏–≥—Ä–∞ –≤ —Å—Ç–∏–ª–µ DnD. –°–º—ã—Å–ª –∏–≥—Ä—ã - –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É, –ø–æ–∫—É–ø–∫–æ–π –≠–∫—Å–∫–∞–ª–∏–±—É—Ä–∞ –∑–∞ 1000 –º–æ–Ω–µ—Ç.

–ö–æ–º–∞–Ω–¥—ã:
/top - –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ø –ø—É—à–∏—Å—Ç–∏–∫–æ–≤ –≤ —á–∞—Ç–µ
/my - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –ø—É—à–∏—Å—Ç–∏–∫–µ
/name - —Å–º–µ–Ω–∏—Ç—å –∏–º—è –ø—É—à–∏—Å—Ç–∏–∫–∞
/job - –≤—ã–±—Ä–∞—Ç—å —Ä–∞–±–æ—Ç—É
/work - —Ä–∞–±–æ—Ç–∞—Ç—å, –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–∞–Ω–µ–µ —Ä–∞–±–æ—Ç—É
/fight - –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –ø—É—à–∏—Å—Ç–∏–∫–∞ –∏–∑ —á–∞—Ç–∞ –∏ –∑–∞–±—Ä–∞—Ç—å/–æ—Ç–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã
/dungeon - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∫–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥—Ä–∞–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π /fight_help

–ë–æ—Ç –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ ${packageJson.version}
`

export const HELP_FIGHT = `
–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –ø—É—à–∏—Å—Ç–∏–∫–∞ —Å—Ä–∞–≤–Ω–∏ –≤–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å–∏–ª—ã, –≤–µ–¥—å —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏—Å—Ö–æ–¥ –±–∏—Ç–≤—ã

–ö–æ–≥–¥–∞ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å /fight, —Ç–æ —Ç–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –¥–∞–ª–µ–µ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∫–∏–Ω—É—Ç—å –∫—É–±–∏–∫
–í—ã–ø–∞–≤—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –∫—É–±–∏–∫–µ –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è –∫ —Ç–≤–æ–µ–º—É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—é —Å–∏–ª—ã –∏ –∑–∞—Ç–µ–º —Ç—ã –≤—Å—Ç—É–ø–∞–µ—à—å –≤ –¥—Ä–∞–∫—É

–£–¥–∞—á–∏ –≤ –±–∏—Ç–≤–∞—Ö, –í–æ–∏–Ω!
`

export const GET_MY = (user: UserT): string => {
  return `
<b>${user.name}</b>

–°–æ—Å—Ç–æ—è–Ω–∏–µ: ${Conditions[user.condition]}
–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: ${user.role}
–ú–æ–Ω–µ—Ç: ${user.money}

–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
–°–∏–ª–∞: ${user.strength}
–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: ${user.intelligence}
`;
};

export const UPGRADE = `
–í—ã–±–µ—Ä–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø—Ä–æ–∫–∞—á–∞—Ç—å
`;

export const UPGRADED = `
–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫–∞—á–∞–Ω–∞. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å /my
`;

export const ALREADY_UPGRADED = (user: UserT) => `
${user.name} —É–∂–µ –ø—Ä–æ–∫–∞—á–∏–≤–∞–ª —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–µ–≥–æ–¥–Ω—è.
`;

export const GET_TOP = (users: UserT[]): string => {
  return users
    .sort((a, b) => b.money - a.money)
    .map((user, index) => {
      const number =
        index === 0
          ? "ü•á"
          : index === 1
          ? "ü•à"
          : index === 2
          ? "ü•â"
          : index + 1;
      return `${number} ${user.name} —Å ${user.money} –º–æ–Ω–µ—Ç.`;
    })
    .join("\n");
};

export const JOB = (job: JobT): string => {
  return `
–í—ã–±–µ—Ä–∏ —Ä–∞–±–æ—Ç—É, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏ –±—ã—Ç—å –≤ —Ç–æ–ø–µ

<b>${job.name}</b>
–ó–∞—Ä–ø–ª–∞—Ç–∞: ${job.charge}

–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
–°–∏–ª–∞: ${job.requiredCharacteristics.strength}
–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: ${job.requiredCharacteristics.intelligence}
  `;
};

export const DUNGEON = (dungeon: DungeonT): string => {
  return `
–í—ã–±–µ—Ä–∏ –≤—Ä–∞–≥–∞ —Å–µ–±–µ –ø–æ —Å–∏–ª–∞–º

<b>${dungeon.name}</b>
–ù–∞–≥—Ä–∞–¥–∞: ${dungeon.award}

–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
–°–∏–ª–∞: ${dungeon.strength}
–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: ${dungeon.intelligence}
`
}

export const CHOOSEN_JOB = (user: UserT) => `
–¢–µ–ø–µ—Ä—å —É ${user.name} –µ—Å—Ç—å —Ä–∞–±–æ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π /work —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å
`;

export const LOW_CHARACTERISTICS = (user: UserT) => `
–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ${user.name} –Ω–∏–∂–µ, —á–µ–º —Ç—Ä–µ–±—É—é—Ç—Å—è
–ò—Å–ø–æ–ª—å–∑—É–π /upgrade —á—Ç–æ–±—ã –ø—Ä–æ–∫–∞—á–∞—Ç—å—Å—è
`;

export const WORKED = (job: JobT, user: UserT): string => {
  return `
${user.name} —É—Å–µ—Ä–¥–Ω–æ —Ç—Ä—É–¥–∏–ª—Å—è –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª ${job.charge} –º–æ–Ω–µ—Ç
  `;
};

export const NEED_SELECT_JOB = (user: UserT) => `
–£ ${user.name} –Ω–µ—Ç —Ä–∞–±–æ—Ç—ã, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –µ—ë /job
`;

export const NEED_REST = (user: UserT) => `
${user.name} –æ—á–µ–Ω—å —É—Å—Ç–∞–ª. –î–∞–π –µ–º—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å
`;

export const WIN_OR_LOSE_IN_DUNGEON = (
  diceValue: number,
  money: number,
  isWin: boolean,
  countEvents: number,
  attacker: UserT,
  defender: DungeonT
): string => {
  const events = mixEvents(
    GOOD_EVENTS_FIGHT,
    BAD_EVENTS_FIGHT,
    countEvents,
    isWin
  )
    .join("\n")
    .replaceAll("–ê—Ç–∞–∫—É—é—â–∏–π", attacker.name)
    .replaceAll("–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è", defender.name);

  if (isWin) {
    return `
${attacker.name} –Ω–∞–ø–∞–ª –Ω–∞ ${defender.name}.
–°–∏–ª–∞ ${attacker.name}: ${attacker.strength} + ${diceValue} –≤—ã–ø–∞–≤—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
–°–∏–ª–∞ ${defender.name}: ${defender.strength}
${events}
${attacker.name} –≤—ã–∏–≥—Ä–∞–ª –∏ –≥–æ—Ä–¥–æ —É—Ö–æ–¥–∏—Ç, –∑–∞–±–∏—Ä–∞—è —É ${defender.name} ${money} –º–æ–Ω–µ—Ç.
    `;
  } else {
    return `
${attacker.name} –Ω–∞–ø–∞–ª –Ω–∞ ${defender.name}.
–°–∏–ª–∞ ${attacker.name}: ${attacker.strength} + ${diceValue} –≤—ã–ø–∞–≤—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
–°–∏–ª–∞ ${defender.name}: ${defender.strength}
${events}
${attacker.name} –ø—Ä–æ–∏–≥—Ä–∞–ª –∏ —É—Ö–æ–¥–∏—Ç –∑–∞–ª–∏–∑—ã–≤–∞—è —Ä–∞–Ω—ã 
    `;
  }
};

export const WIN_OR_LOSE_IN_FIGHT = (
  diceValue: number,
  money: number,
  isWin: boolean,
  countEvents: number,
  attacker: UserT,
  defender: UserT
): string => {
  const events = mixEvents(
    GOOD_EVENTS_FIGHT,
    BAD_EVENTS_FIGHT,
    countEvents,
    isWin
  )
    .join("\n")
    .replaceAll("–ê—Ç–∞–∫—É—é—â–∏–π", attacker.name)
    .replaceAll("–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è", defender.name);

  if (isWin) {
    return `
${attacker.name} –Ω–∞–ø–∞–ª –Ω–∞ ${defender.name}.
–°–∏–ª–∞ ${attacker.name}: ${attacker.strength} + ${diceValue} –≤—ã–ø–∞–≤—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
–°–∏–ª–∞ ${defender.name}: ${defender.strength}
${events}
${attacker.name} –≤—ã–∏–≥—Ä–∞–ª –∏ –≥–æ—Ä–¥–æ —É—Ö–æ–¥–∏—Ç, –∑–∞–±–∏—Ä–∞—è —É ${defender.name} ${money} –º–æ–Ω–µ—Ç.
    `;
  } else {
    return `
${attacker.name} –Ω–∞–ø–∞–ª –Ω–∞ ${defender.name}.
–°–∏–ª–∞ ${attacker.name}: ${attacker.strength} + ${diceValue} –≤—ã–ø–∞–≤—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
–°–∏–ª–∞ ${defender.name}: ${defender.strength}
${events}
${attacker.name} –ø–æ—Ç–µ—Ä—è–ª ${money} –º–æ–Ω–µ—Ç.
    `;
  }
};

export const BAD_EVENTS_FIGHT = [
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø–æ–ª—É—á–∞–µ—Ç –ø–æ –ª–∏—Ü—É –æ—Ç –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ª–æ–≤–∫–æ —É–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç —É–¥–∞—Ä–∞ –ê—Ç–∞–∫—É—é—â–∏–π",
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø—ã—Ç–∞–µ—Ç—Å—è —Å–±–∏—Ç—å —Å –Ω–æ–≥ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è, –Ω–æ —Ç–æ—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–ø–æ–∫–æ–ª–µ–±–∏–º—ã–º",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—Ä–æ–≤–æ–¥–∏—Ç –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫—É, –∑–∞—Å—Ç–∞–≤–ª—è—è –ê—Ç–∞–∫—É—é—â–∏–π –æ—Ç—Å—Ç—É–ø–∏—Ç—å",
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø–æ–¥—Å–∫–∞–ª—å–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–º–Ω–µ, –∞ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –≤–æ—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç—Ç–∏–º",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ª–æ–≤–∫–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç –∫–∞–∂–¥—ã–π —É–¥–∞—Ä –ê—Ç–∞–∫—É—é—â–∏–π",
  "–ê—Ç–∞–∫—É—é—â–∏–π —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –∞—Ç–∞–∫–æ–≤–∞—Ç—å —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω, –Ω–æ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—Ä–æ—á–µ–Ω –≤ –æ–±–æ—Ä–æ–Ω–µ",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –º–µ—Ç–∫–æ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–ª–∞–±–æ–µ –º–µ—Å—Ç–æ –ê—Ç–∞–∫—É—é—â–∏–π",
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø—ã—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–Ω–∏–∫–Ω—É—Ç—å —Å–∫–≤–æ–∑—å –∑–∞—â–∏—Ç—É, –Ω–æ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –Ω–µ –¥–∞–µ—Ç —Å–µ–±—è –ø—Ä–æ–π—Ç–∏",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è —É–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç —É–¥–∞—Ä–æ–≤ –ê—Ç–∞–∫—É—é—â–∏–π",
  "–ê—Ç–∞–∫—É—é—â–∏–π –¥–µ–ª–∞–µ—Ç —Ä—ã–≤–æ–∫, –Ω–æ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è —É—Å–ø–µ–≤–∞–µ—Ç —É–≤–µ—Ä–Ω—É—Ç—å—Å—è",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—Ä–æ–≤–æ–¥–∏—Ç —Ö–∏—Ç—Ä–æ—É–º–Ω—É—é –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω—É—é –∞—Ç–∞–∫—É",
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø—ã—Ç–∞–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ç—å –∑–∞—â–∏—Ç—É –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è, –Ω–æ –±–µ–∑—É—Å–ø–µ—à–Ω–æ",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –≤ –æ–±–æ—Ä–æ–Ω–µ",
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–ø–æ—Ä –æ—Ç —Å—Ç–æ–π–∫–æ–≥–æ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –±—ã—Å—Ç—Ä–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∞—Ç–∞–∫—É –∏ –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫—É–µ—Ç",
  "–ê—Ç–∞–∫—É—é—â–∏–π –º–µ—Ç–∫–æ –ø—Ä–æ–º–∞—Ö–∏–≤–∞–µ—Ç—Å—è, –∞ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –∞—Ç–∞–∫—É–µ—Ç",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è —Å —É–¥–∏–≤–ª–µ–Ω–∏–µ–º –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –ê—Ç–∞–∫—É—é—â–∏–π –æ—Ç—Å—Ç—É–ø–∏—Ç—å",
  "–ê—Ç–∞–∫—É—é—â–∏–π –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤ –∞—Ç–∞–∫–µ, —Å—Ç–∞–ª–∫–∏–≤–∞—è—Å—å —Å —É–º–µ–ª–æ–π –∑–∞—â–∏—Ç–æ–π",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Ö–æ–¥ –±–æ—è, –Ω–µ –¥–∞–≤–∞—è –ê—Ç–∞–∫—É—é—â–∏–π —à–∞–Ω—Å–æ–≤",
];

export const GOOD_EVENTS_FIGHT = [
  "–ê—Ç–∞–∫—É—é—â–∏–π –º–æ—â–Ω–æ –ø—Ä–æ–±–∏–≤–∞–µ—Ç –±–ª–æ–∫ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—è—Ç–∫–æ–π",
  "–ê—Ç–∞–∫—É—é—â–∏–π —Å –ª–µ–≥–∫–æ—Å—Ç—å—é —É–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç —É–¥–∞—Ä–∞ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç —É–≤–µ—Ä–Ω—É—Ç—å—Å—è, –∏ –ê—Ç–∞–∫—É—é—â–∏–π –Ω–∞–Ω–æ—Å–∏—Ç —Ç–æ—á–µ—á–Ω—ã–π —É–¥–∞—Ä",
  "–ê—Ç–∞–∫—É—é—â–∏–π —Ö–∏—Ç—Ä–æ –æ–±—Ö–æ–¥–∏—Ç –∑–∞—â–∏—Ç—É –∏ –±—å–µ—Ç –≤ —É—è–∑–≤–∏–º–æ–µ –º–µ—Å—Ç–æ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è",
  "–ê—Ç–∞–∫—É—é—â–∏–π –±—ã—Å—Ç—Ä–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏—è –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –∏ –∞—Ç–∞–∫—É–µ—Ç —Å–±–æ–∫—É",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—ã—Ç–∞–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫–æ–≤–∞—Ç—å, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π –ø—Ä–µ–¥–≤–∏–¥–∏—Ç –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è",
  "–ê—Ç–∞–∫—É—é—â–∏–π —É–∫–ª–æ–Ω—è–µ—Ç—Å—è –æ—Ç –∑–∞—â–∏—Ç–Ω–æ–≥–æ —É–¥–∞—Ä–∞ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –∏ –Ω–∞–Ω–æ—Å–∏—Ç –æ—Ç–≤–µ—Ç–Ω—ã–π",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø–æ–¥–Ω–∏–º–∞–µ—Ç —â–∏—Ç, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π —Å –ª–µ–≥–∫–æ—Å—Ç—å—é –æ–±—Ö–æ–¥–∏—Ç –∑–∞—â–∏—Ç—É",
  "–ê—Ç–∞–∫—É—é—â–∏–π –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è–µ—Ç —Ç–∞–∫—Ç–∏–∫—É, –æ—Å—Ç–∞–≤–ª—è—è –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –±–µ–∑ –∑–∞—â–∏—Ç—ã",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—ã—Ç–∞–µ—Ç—Å—è —Å–±–∏—Ç—å –ê—Ç–∞–∫—É—é—â–∏–π —Å –Ω–æ–≥, –Ω–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç",
  "–ê—Ç–∞–∫—É—é—â–∏–π —Å–∏–ª—å–Ω–æ –¥–∞–≤–∏—Ç –Ω–∞ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è, –Ω–µ –¥–∞–≤–∞—è –µ–º—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞—Ç–∞–∫–æ–≤–∞—Ç—å",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—ã—Ç–∞–µ—Ç—Å—è —É–≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π —Å–ª–µ–¥—É–µ—Ç –∑–∞ –µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏",
  "–ê—Ç–∞–∫—É—é—â–∏–π –ø—Ä–æ–≤–æ–¥–∏—Ç —Ö–∏—Ç—Ä–æ—É–º–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é —É–¥–∞—Ä–æ–≤, –Ω–µ –¥–∞–≤–∞—è —à–∞–Ω—Å–æ–≤ –Ω–∞ –∑–∞—â–∏—Ç—É",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–±–∏—Ç—å—Å—è –≤ —É–≥–æ–ª, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π –Ω–µ –¥–∞–µ—Ç –µ–º—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å",
  "–ê—Ç–∞–∫—É—é—â–∏–π –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–∞–∂–¥–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –ó–∞—â–∏—â–∞—é—â–∏–π—Å—è",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç—Ä–∞–∑–∏—Ç—å –∞—Ç–∞–∫—É, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π —É–∂–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É–¥–∞—Ä–µ",
  "–ê—Ç–∞–∫—É—é—â–∏–π —Å –ª–µ–≥–∫–æ—Å—Ç—å—é –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç –∑–∞—â–∏—Ç—É –∏ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç —Å–≤–æ–µ–π —Ü–µ–ª–∏",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –±—å–µ—Ç—Å—è –≤ –æ—Ç—á–∞—è–Ω–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –∑–∞—â–∏—Ç–∏—Ç—å—Å—è, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π —Å–ª–∏—à–∫–æ–º —Å–∏–ª–µ–Ω",
  "–ê—Ç–∞–∫—É—é—â–∏–π –±–µ–∑ —Ç—Ä—É–¥–∞ –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç –≤ –±–æ—é, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—è –∫–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
  "–ó–∞—â–∏—â–∞—é—â–∏–π—Å—è –ø—ã—Ç–∞–µ—Ç—Å—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –Ω–æ –ê—Ç–∞–∫—É—é—â–∏–π –Ω–µ –¥–∞–µ—Ç –µ–º—É —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å",
];

export const CHANGE_NAME = `
–û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ –∏–º—è —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
`;

export const CHANGED_NAME = (newName: string): string => `
–ò–º—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ ${newName}
`;
